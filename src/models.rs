#[derive(Serialize, Deserialize)]
pub struct AuthResponse {
    pub access_token: String,
    token_type: String,
    expires_in: u32,
    scope: String,
}

#[derive(Serialize, Deserialize)]
pub struct RedditUser {
    is_employee: bool,
    has_visited_new_profile: bool,
    pref_no_profanity: bool,
    is_suspended: bool,
    pref_geopopular: String,
    pref_show_trending: bool,
    subreddit: Subreddit,
    is_sponsor: bool,
    gold_expiration: Option<String>,
    id: String,
    suspension_expiration_utc: Option<u32>,
    verified: bool,
    new_modmail_exists: Option<bool>,
    // TODO: Feature json implementation
    over_18: bool,
    is_gold: bool,
    is_mod: bool,
    has_verified_email: bool,
    in_redesign_beta: bool,
    icon_img: String,
    has_mod_mail: bool,
    oauth_client_id: String,
    hide_from_robots: bool,
    link_karma: u32,
    inbox_count: u32,
    pref_top_karma_subreddits: bool,
    has_mail: bool,
    pref_show_snoovatar: bool,
    name: String,
    pref_clickgadget: u32,
    created: f64,
    gold_creddits: u32,
    created_utc: f64,
    in_beta: bool,
    comment_karma: u32,
    has_subscribed: bool,
}

#[derive(Serialize, Deserialize)]
pub struct Subreddit {
    default_set: bool,
    icon_img: String,
    banner_img: String,
    description: String,
    //header_size: String,
    user_is_banned: bool,
    subscribers: u32,
    community_icon: String,
    key_color: String,
    show_media: bool,
    display_name_prefixed: String,
    icon_color: String,
    user_is_muted: bool,
    subreddit_type: String,
    display_name: String,
    header_img: Option<String>,
    is_default_banner: bool,
    title: String,
    url: String,
    banner_size: Option<u32>,
    name: String,
    user_is_contributor: bool,
    user_is_moderator: bool,
    over_18: bool,
    public_description: String,
    link_flair_enabled: bool,
    //icon size
    is_default_icon: bool,
    primary_color: String,
    audience_target: String,
    user_is_subscriber: bool,
}
